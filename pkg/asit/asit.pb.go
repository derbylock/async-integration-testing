// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: proto/asit.proto

package asit

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestRunStatus int32

const (
	TestRunStatus_STARTED TestRunStatus = 0
	TestRunStatus_SUCCESS TestRunStatus = 1
	TestRunStatus_FAIL    TestRunStatus = 2
)

// Enum value maps for TestRunStatus.
var (
	TestRunStatus_name = map[int32]string{
		0: "STARTED",
		1: "SUCCESS",
		2: "FAIL",
	}
	TestRunStatus_value = map[string]int32{
		"STARTED": 0,
		"SUCCESS": 1,
		"FAIL":    2,
	}
)

func (x TestRunStatus) Enum() *TestRunStatus {
	p := new(TestRunStatus)
	*p = x
	return p
}

func (x TestRunStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestRunStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_asit_proto_enumTypes[0].Descriptor()
}

func (TestRunStatus) Type() protoreflect.EnumType {
	return &file_proto_asit_proto_enumTypes[0]
}

func (x TestRunStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TestRunStatus.Descriptor instead.
func (TestRunStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_asit_proto_rawDescGZIP(), []int{0}
}

type TestStepRunStatus int32

const (
	TestStepRunStatus_CREATED              TestStepRunStatus = 0
	TestStepRunStatus_ACTIVE               TestStepRunStatus = 1
	TestStepRunStatus_ACTION_STARTED       TestStepRunStatus = 3
	TestStepRunStatus_ACTION_FINISHED      TestStepRunStatus = 4
	TestStepRunStatus_ACTION_FAILED        TestStepRunStatus = 5
	TestStepRunStatus_VERIFICATION_SUCCESS TestStepRunStatus = 6
	TestStepRunStatus_VERIFICATION_FAILED  TestStepRunStatus = 7
)

// Enum value maps for TestStepRunStatus.
var (
	TestStepRunStatus_name = map[int32]string{
		0: "CREATED",
		1: "ACTIVE",
		3: "ACTION_STARTED",
		4: "ACTION_FINISHED",
		5: "ACTION_FAILED",
		6: "VERIFICATION_SUCCESS",
		7: "VERIFICATION_FAILED",
	}
	TestStepRunStatus_value = map[string]int32{
		"CREATED":              0,
		"ACTIVE":               1,
		"ACTION_STARTED":       3,
		"ACTION_FINISHED":      4,
		"ACTION_FAILED":        5,
		"VERIFICATION_SUCCESS": 6,
		"VERIFICATION_FAILED":  7,
	}
)

func (x TestStepRunStatus) Enum() *TestStepRunStatus {
	p := new(TestStepRunStatus)
	*p = x
	return p
}

func (x TestStepRunStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestStepRunStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_asit_proto_enumTypes[1].Descriptor()
}

func (TestStepRunStatus) Type() protoreflect.EnumType {
	return &file_proto_asit_proto_enumTypes[1]
}

func (x TestStepRunStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TestStepRunStatus.Descriptor instead.
func (TestStepRunStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_asit_proto_rawDescGZIP(), []int{1}
}

type ClientList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clients []*Client `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty"`
}

func (x *ClientList) Reset() {
	*x = ClientList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_asit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientList) ProtoMessage() {}

func (x *ClientList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_asit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientList.ProtoReflect.Descriptor instead.
func (*ClientList) Descriptor() ([]byte, []int) {
	return file_proto_asit_proto_rawDescGZIP(), []int{0}
}

func (x *ClientList) GetClients() []*Client {
	if x != nil {
		return x.Clients
	}
	return nil
}

type Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LastUpdated      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	Clientproperties map[string]string      `protobuf:"bytes,4,rep,name=clientproperties,proto3" json:"clientproperties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Client) Reset() {
	*x = Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_asit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client) ProtoMessage() {}

func (x *Client) ProtoReflect() protoreflect.Message {
	mi := &file_proto_asit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client.ProtoReflect.Descriptor instead.
func (*Client) Descriptor() ([]byte, []int) {
	return file_proto_asit_proto_rawDescGZIP(), []int{1}
}

func (x *Client) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Client) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Client) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *Client) GetClientproperties() map[string]string {
	if x != nil {
		return x.Clientproperties
	}
	return nil
}

type TestCase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string      `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Steps       []*TestStep `protobuf:"bytes,4,rep,name=steps,proto3" json:"steps,omitempty"`
}

func (x *TestCase) Reset() {
	*x = TestCase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_asit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCase) ProtoMessage() {}

func (x *TestCase) ProtoReflect() protoreflect.Message {
	mi := &file_proto_asit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCase.ProtoReflect.Descriptor instead.
func (*TestCase) Descriptor() ([]byte, []int) {
	return file_proto_asit_proto_rawDescGZIP(), []int{2}
}

func (x *TestCase) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TestCase) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TestCase) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TestCase) GetSteps() []*TestStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

type TestSuite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string      `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Tests       []*TestCase `protobuf:"bytes,4,rep,name=tests,proto3" json:"tests,omitempty"`
}

func (x *TestSuite) Reset() {
	*x = TestSuite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_asit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestSuite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSuite) ProtoMessage() {}

func (x *TestSuite) ProtoReflect() protoreflect.Message {
	mi := &file_proto_asit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSuite.ProtoReflect.Descriptor instead.
func (*TestSuite) Descriptor() ([]byte, []int) {
	return file_proto_asit_proto_rawDescGZIP(), []int{3}
}

func (x *TestSuite) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TestSuite) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TestSuite) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TestSuite) GetTests() []*TestCase {
	if x != nil {
		return x.Tests
	}
	return nil
}

type TestStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description  string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Action       *TestAction       `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	Verification *TestVerification `protobuf:"bytes,5,opt,name=verification,proto3" json:"verification,omitempty"`
}

func (x *TestStep) Reset() {
	*x = TestStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_asit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestStep) ProtoMessage() {}

func (x *TestStep) ProtoReflect() protoreflect.Message {
	mi := &file_proto_asit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestStep.ProtoReflect.Descriptor instead.
func (*TestStep) Descriptor() ([]byte, []int) {
	return file_proto_asit_proto_rawDescGZIP(), []int{4}
}

func (x *TestStep) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TestStep) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TestStep) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TestStep) GetAction() *TestAction {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *TestStep) GetVerification() *TestVerification {
	if x != nil {
		return x.Verification
	}
	return nil
}

type TestAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Function  string            `protobuf:"bytes,1,opt,name=function,proto3" json:"function,omitempty"`
	Arguments map[string]string `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TestAction) Reset() {
	*x = TestAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_asit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestAction) ProtoMessage() {}

func (x *TestAction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_asit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestAction.ProtoReflect.Descriptor instead.
func (*TestAction) Descriptor() ([]byte, []int) {
	return file_proto_asit_proto_rawDescGZIP(), []int{5}
}

func (x *TestAction) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *TestAction) GetArguments() map[string]string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

type TestCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Function  string            `protobuf:"bytes,1,opt,name=function,proto3" json:"function,omitempty"`
	Arguments map[string]string `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TestCheck) Reset() {
	*x = TestCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_asit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCheck) ProtoMessage() {}

func (x *TestCheck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_asit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCheck.ProtoReflect.Descriptor instead.
func (*TestCheck) Descriptor() ([]byte, []int) {
	return file_proto_asit_proto_rawDescGZIP(), []int{6}
}

func (x *TestCheck) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *TestCheck) GetArguments() map[string]string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

type TestVerification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checks []*TestCheck `protobuf:"bytes,1,rep,name=checks,proto3" json:"checks,omitempty"`
}

func (x *TestVerification) Reset() {
	*x = TestVerification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_asit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestVerification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestVerification) ProtoMessage() {}

func (x *TestVerification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_asit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestVerification.ProtoReflect.Descriptor instead.
func (*TestVerification) Descriptor() ([]byte, []int) {
	return file_proto_asit_proto_rawDescGZIP(), []int{7}
}

func (x *TestVerification) GetChecks() []*TestCheck {
	if x != nil {
		return x.Checks
	}
	return nil
}

type TestRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TestSuiteId       string                 `protobuf:"bytes,2,opt,name=testSuiteId,proto3" json:"testSuiteId,omitempty"`
	Status            TestRunStatus          `protobuf:"varint,3,opt,name=status,proto3,enum=asit.TestRunStatus" json:"status,omitempty"`
	State             *TestState             `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	StatusDescription string                 `protobuf:"bytes,5,opt,name=statusDescription,proto3" json:"statusDescription,omitempty"`
	LastUpdated       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
}

func (x *TestRun) Reset() {
	*x = TestRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_asit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRun) ProtoMessage() {}

func (x *TestRun) ProtoReflect() protoreflect.Message {
	mi := &file_proto_asit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRun.ProtoReflect.Descriptor instead.
func (*TestRun) Descriptor() ([]byte, []int) {
	return file_proto_asit_proto_rawDescGZIP(), []int{8}
}

func (x *TestRun) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TestRun) GetTestSuiteId() string {
	if x != nil {
		return x.TestSuiteId
	}
	return ""
}

func (x *TestRun) GetStatus() TestRunStatus {
	if x != nil {
		return x.Status
	}
	return TestRunStatus_STARTED
}

func (x *TestRun) GetState() *TestState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *TestRun) GetStatusDescription() string {
	if x != nil {
		return x.StatusDescription
	}
	return ""
}

func (x *TestRun) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

type TestStepRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestStepId        string            `protobuf:"bytes,1,opt,name=testStepId,proto3" json:"testStepId,omitempty"`
	Status            TestStepRunStatus `protobuf:"varint,2,opt,name=status,proto3,enum=asit.TestStepRunStatus" json:"status,omitempty"`
	Logs              []string          `protobuf:"bytes,3,rep,name=logs,proto3" json:"logs,omitempty"`
	StatusDescription string            `protobuf:"bytes,4,opt,name=statusDescription,proto3" json:"statusDescription,omitempty"`
	Data              map[string]string `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TestStepRun) Reset() {
	*x = TestStepRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_asit_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestStepRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestStepRun) ProtoMessage() {}

func (x *TestStepRun) ProtoReflect() protoreflect.Message {
	mi := &file_proto_asit_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestStepRun.ProtoReflect.Descriptor instead.
func (*TestStepRun) Descriptor() ([]byte, []int) {
	return file_proto_asit_proto_rawDescGZIP(), []int{9}
}

func (x *TestStepRun) GetTestStepId() string {
	if x != nil {
		return x.TestStepId
	}
	return ""
}

func (x *TestStepRun) GetStatus() TestStepRunStatus {
	if x != nil {
		return x.Status
	}
	return TestStepRunStatus_CREATED
}

func (x *TestStepRun) GetLogs() []string {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *TestStepRun) GetStatusDescription() string {
	if x != nil {
		return x.StatusDescription
	}
	return ""
}

func (x *TestStepRun) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type TestState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentStepIndex int32             `protobuf:"varint,1,opt,name=currentStepIndex,proto3" json:"currentStepIndex,omitempty"`
	Clientproperties map[string]string `protobuf:"bytes,2,rep,name=clientproperties,proto3" json:"clientproperties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	StepRuns         []*TestStepRun    `protobuf:"bytes,3,rep,name=stepRuns,proto3" json:"stepRuns,omitempty"`
	Data             map[string]string `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TestState) Reset() {
	*x = TestState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_asit_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestState) ProtoMessage() {}

func (x *TestState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_asit_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestState.ProtoReflect.Descriptor instead.
func (*TestState) Descriptor() ([]byte, []int) {
	return file_proto_asit_proto_rawDescGZIP(), []int{10}
}

func (x *TestState) GetCurrentStepIndex() int32 {
	if x != nil {
		return x.CurrentStepIndex
	}
	return 0
}

func (x *TestState) GetClientproperties() map[string]string {
	if x != nil {
		return x.Clientproperties
	}
	return nil
}

func (x *TestState) GetStepRuns() []*TestStepRun {
	if x != nil {
		return x.StepRuns
	}
	return nil
}

func (x *TestState) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

// Just consistance-supporting structures for KV storage messages
type ClientKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *ClientKeys) Reset() {
	*x = ClientKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_asit_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientKeys) ProtoMessage() {}

func (x *ClientKeys) ProtoReflect() protoreflect.Message {
	mi := &file_proto_asit_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientKeys.ProtoReflect.Descriptor instead.
func (*ClientKeys) Descriptor() ([]byte, []int) {
	return file_proto_asit_proto_rawDescGZIP(), []int{11}
}

func (x *ClientKeys) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_proto_asit_proto protoreflect.FileDescriptor

var file_proto_asit_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x73, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x61, 0x73, 0x69, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a, 0x0a, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x73, 0x69, 0x74, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x80, 0x02, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d,
	0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x4e, 0x0a,
	0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x73, 0x69, 0x74, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x43, 0x0a,
	0x15, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x76, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x73, 0x69, 0x74, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x65, 0x70, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x22, 0x77, 0x0a, 0x09, 0x54, 0x65,
	0x73, 0x74, 0x53, 0x75, 0x69, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a,
	0x05, 0x74, 0x65, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61,
	0x73, 0x69, 0x74, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x52, 0x05, 0x74, 0x65,
	0x73, 0x74, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x53, 0x74, 0x65, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x73, 0x69, 0x74, 0x2e, 0x54, 0x65,
	0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3a, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x73, 0x69, 0x74, 0x2e, 0x54, 0x65,
	0x73, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa5, 0x01, 0x0a,
	0x0a, 0x54, 0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x73, 0x69,
	0x74, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x72, 0x67,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x61, 0x72, 0x67,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x3c, 0x0a, 0x0e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xa3, 0x01, 0x0a, 0x09, 0x54, 0x65, 0x73, 0x74, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c,
	0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x73, 0x69, 0x74, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x3c, 0x0a, 0x0e,
	0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3b, 0x0a, 0x10, 0x54, 0x65,
	0x73, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x0a, 0x06, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x61, 0x73, 0x69, 0x74, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x06, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x22, 0xfc, 0x01, 0x0a, 0x07, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x75, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x53, 0x75, 0x69, 0x74, 0x65,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x53, 0x75,
	0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61, 0x73, 0x69, 0x74, 0x2e, 0x54, 0x65, 0x73,
	0x74, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x73, 0x69, 0x74, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x8a, 0x02, 0x0a, 0x0b, 0x54, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x65, 0x70, 0x52, 0x75, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x65, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x65, 0x70, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x61, 0x73, 0x69, 0x74, 0x2e, 0x54, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x65, 0x70, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x69, 0x74, 0x2e, 0x54,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x65, 0x70, 0x52, 0x75, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xe6, 0x02, 0x0a, 0x09, 0x54, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x51, 0x0a,
	0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x73, 0x69, 0x74, 0x2e, 0x54,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x2d, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x70, 0x52, 0x75, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x73, 0x69, 0x74, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x65, 0x70, 0x52, 0x75, 0x6e, 0x52, 0x08, 0x73, 0x74, 0x65, 0x70, 0x52, 0x75, 0x6e, 0x73, 0x12,
	0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x73, 0x69, 0x74, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x43,
	0x0a, 0x15, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x20, 0x0a, 0x0a,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x2a, 0x33,
	0x0a, 0x0d, 0x54, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x41, 0x49,
	0x4c, 0x10, 0x02, 0x2a, 0x9b, 0x01, 0x0a, 0x11, 0x54, 0x65, 0x73, 0x74, 0x53, 0x74, 0x65, 0x70,
	0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x18,
	0x0a, 0x14, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x56, 0x45, 0x52, 0x49,
	0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x07, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x3b, 0x61, 0x73, 0x69, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_asit_proto_rawDescOnce sync.Once
	file_proto_asit_proto_rawDescData = file_proto_asit_proto_rawDesc
)

func file_proto_asit_proto_rawDescGZIP() []byte {
	file_proto_asit_proto_rawDescOnce.Do(func() {
		file_proto_asit_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_asit_proto_rawDescData)
	})
	return file_proto_asit_proto_rawDescData
}

var file_proto_asit_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_asit_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_proto_asit_proto_goTypes = []interface{}{
	(TestRunStatus)(0),            // 0: asit.TestRunStatus
	(TestStepRunStatus)(0),        // 1: asit.TestStepRunStatus
	(*ClientList)(nil),            // 2: asit.ClientList
	(*Client)(nil),                // 3: asit.Client
	(*TestCase)(nil),              // 4: asit.TestCase
	(*TestSuite)(nil),             // 5: asit.TestSuite
	(*TestStep)(nil),              // 6: asit.TestStep
	(*TestAction)(nil),            // 7: asit.TestAction
	(*TestCheck)(nil),             // 8: asit.TestCheck
	(*TestVerification)(nil),      // 9: asit.TestVerification
	(*TestRun)(nil),               // 10: asit.TestRun
	(*TestStepRun)(nil),           // 11: asit.TestStepRun
	(*TestState)(nil),             // 12: asit.TestState
	(*ClientKeys)(nil),            // 13: asit.ClientKeys
	nil,                           // 14: asit.Client.ClientpropertiesEntry
	nil,                           // 15: asit.TestAction.ArgumentsEntry
	nil,                           // 16: asit.TestCheck.ArgumentsEntry
	nil,                           // 17: asit.TestStepRun.DataEntry
	nil,                           // 18: asit.TestState.ClientpropertiesEntry
	nil,                           // 19: asit.TestState.DataEntry
	(*timestamppb.Timestamp)(nil), // 20: google.protobuf.Timestamp
}
var file_proto_asit_proto_depIdxs = []int32{
	3,  // 0: asit.ClientList.clients:type_name -> asit.Client
	20, // 1: asit.Client.last_updated:type_name -> google.protobuf.Timestamp
	14, // 2: asit.Client.clientproperties:type_name -> asit.Client.ClientpropertiesEntry
	6,  // 3: asit.TestCase.steps:type_name -> asit.TestStep
	4,  // 4: asit.TestSuite.tests:type_name -> asit.TestCase
	7,  // 5: asit.TestStep.action:type_name -> asit.TestAction
	9,  // 6: asit.TestStep.verification:type_name -> asit.TestVerification
	15, // 7: asit.TestAction.arguments:type_name -> asit.TestAction.ArgumentsEntry
	16, // 8: asit.TestCheck.arguments:type_name -> asit.TestCheck.ArgumentsEntry
	8,  // 9: asit.TestVerification.checks:type_name -> asit.TestCheck
	0,  // 10: asit.TestRun.status:type_name -> asit.TestRunStatus
	12, // 11: asit.TestRun.state:type_name -> asit.TestState
	20, // 12: asit.TestRun.last_updated:type_name -> google.protobuf.Timestamp
	1,  // 13: asit.TestStepRun.status:type_name -> asit.TestStepRunStatus
	17, // 14: asit.TestStepRun.data:type_name -> asit.TestStepRun.DataEntry
	18, // 15: asit.TestState.clientproperties:type_name -> asit.TestState.ClientpropertiesEntry
	11, // 16: asit.TestState.stepRuns:type_name -> asit.TestStepRun
	19, // 17: asit.TestState.data:type_name -> asit.TestState.DataEntry
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_proto_asit_proto_init() }
func file_proto_asit_proto_init() {
	if File_proto_asit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_asit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_asit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_asit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestCase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_asit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestSuite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_asit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_asit_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_asit_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_asit_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestVerification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_asit_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_asit_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestStepRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_asit_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_asit_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_asit_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_asit_proto_goTypes,
		DependencyIndexes: file_proto_asit_proto_depIdxs,
		EnumInfos:         file_proto_asit_proto_enumTypes,
		MessageInfos:      file_proto_asit_proto_msgTypes,
	}.Build()
	File_proto_asit_proto = out.File
	file_proto_asit_proto_rawDesc = nil
	file_proto_asit_proto_goTypes = nil
	file_proto_asit_proto_depIdxs = nil
}
